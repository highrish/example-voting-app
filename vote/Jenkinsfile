pipeline {

    agent none

      stages {
        stage('build') {
          agent{
            docker{
              image 'python:2.7.16-slim'
              args '--user root'
             }
          }
	   when{
	     changeset "**/vote/**"
           }

            steps {
                echo 'Compiling vote app'
                dir('vote'){
                  sh 'pip install -r'
              }
            }
        }
        stage('test') {
          agent{
            docker{
              image 'python:2.7.16-slim'
              args '--user root'
             }
            }
           when{
	     changeset "**/vote/**"
           }

           }
             steps {
                echo 'Running Unit Tests on vote app'
		dir('vote'){
		  sh 'nosetests -v'
       	      }
            }
        }
        stage('docker-package'){
            agent any
            when{
              changeset "**/vote/**"
              branch 'master'
            }
            steps{
              echo 'Packaging vote app with docker'
              script{
                docker.withRegistry('https://index.docker.io/v1/', 'dockerlogin') {
                    def workerImage = docker.build("romsd/vote:v${env.BUILD_ID}", "./vote")
                    workerImage.push()
                    workerImage.push("${env.BRANCH_NAME}")
                }
              }
            }
        }
    }
    post {
        always{
            echo 'Pipeline for vote is complete..'
        }
        failure{
            slackSend (channel: "général", message: "Build Failed - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
        }
        success{
            slackSend (channel: "général", message: "Build Succeeded - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
        }
    }
}
